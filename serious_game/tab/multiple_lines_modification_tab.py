# -*- coding: utf-8 -*-
"""
/***************************************************************************
 GeomelbaSpirit
                                 A QGIS plugin
 Based on GeoMelba software, meant to be used with the serious game CAUSERIE.
 This file contains the functions to use when the user configure the dock widget.
 Buttons and widget of the dock widget are controlled with functions from this file.
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                              -------------------
        begin                : 2021-08-24
        git sha              : $Format:%H$
        copyright            : (C) 2021 by Jules Grillot / INRAE
        email                : jules.grillot@inrae.fr
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""
from PyQt5.QtCore import QUrl
from PyQt5.QtWidgets import QTextBrowser

from .tab_management import TabManagement
from .interface_tools.interface_management import UiCreationMultipleModification
from ...dictionnaire import field_type_line_middle, infos_tab_lines_edit, field_type_line_top, field_type_line_bottom, \
    multiple_lines_tab_name, lines_multiple_modification_label_pt_1, lines_multiple_modification_label_pt_2


class MultipleLinesModificationTab (TabManagement):

    def __init__(self, parent=None, line_layer=None, line_type=None):
        """Concern the tab creation of the multiple lines modification :
        - some checkboxes and buttons to modify all the lines with the same type to another type.
        """
        super(MultipleLinesModificationTab, self).__init__(tab_widget=parent.tab_widget)
        self.tab_widget.setTabText(self.tab_index_multiple_lines, multiple_lines_tab_name)
        # Button and checkbox creation
        self.ui_creation = UiCreationMultipleModification(parent=parent, tab_widget=self.tab_widget,
                                                          checkbox_owner=None, spinbox_owner=None, production_type=None)
        self.ui_creation.init_multiples(self.tab_index_multiple_lines, lines_multiple_modification_label_pt_1,
                                        lines_multiple_modification_label_pt_2, "edit_multiple", line_layer,
                                        {key: val for key, val in line_type.items() if val != 200 and val != 300},
                                        [field_type_line_middle, field_type_line_top, field_type_line_bottom],
                                        self.tab_widget)
        text_lines = QTextBrowser(self.tab_widget.widget(self.tab_index_multiple_lines))
        text_lines.setGeometry(10, 430, 610, 330)
        text_lines.setSource(QUrl.fromLocalFile(infos_tab_lines_edit))
