# -*- coding: utf-8 -*-
"""
/***************************************************************************
 GeomelbaSpirit
                                 A QGIS plugin
 Based on GeoMelba software, meant to be used with the serious game CAUSERIE.
 This file contains the calculations used to get the flow production, and the flow abatement.
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                              -------------------
        begin                : 2021-08-24
        git sha              : $Format:%H$
        copyright            : (C) 2021 by Jules Grillot / INRAE
        email                : jules.grillot@inrae.fr
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""


def parcel_inflow_production(land_cover, agricultural_practices, slope, area, slope_list, production_list):
    """Used to get the flow production of a feature depending on it's land cover, agricultural practice, slope and area.
    The mandatory arguments are :
    - the land cover type of the feature
    - the agricultural practice of the feature
    - the slope of the feature
    - the area of the feature
    - the list of the slopes range
    - list of the flow production coefficient based on slopes, land cover and agricultural practices.
    """
    # If the slope is low, the slope is lower than the biggest value in the low slope range.
    if slope < slope_list['low'][1]:
        flow_production_coefficient = production_list[land_cover][agricultural_practices][0]
    # If the slope is high, the slope is higher than the biggest value in the medium slope range.
    elif slope > slope_list['medium'][1]:
        flow_production_coefficient = production_list[land_cover][agricultural_practices][2]
    else:
        flow_production_coefficient = production_list[land_cover][agricultural_practices][1]
    flow_production = area * flow_production_coefficient
    return flow_production


def coefficient_abatement_UH(land_cover, slope, length, slope_list, abatement_list):
    """Used to get the abatement coefficient of an UH based on it's land cover, slope and slope length.
    The mandatory arguments are :
    - the land cover type of the feature
    - the slope of the feature
    - the slope length of the feature
    - the list of the slopes range
    - list of the abatement values for every land cover type depending on slope.
    """
    # If the slope is low, the slope is lower than the biggest value in the low slope range.
    if slope < slope_list['low'][1]:
        abatement = abatement_list[land_cover][0]
    # If the slope is high, the slope is higher than the biggest value in the medium slope range.
    elif slope > slope_list['medium'][1]:
        abatement = abatement_list[land_cover][2]
    # If the slope is medium
    else:
        abatement = abatement_list[land_cover][1]
    calculation = (length / 5) * abatement
    coefficient = min(100, calculation) / 100
    return coefficient


def coefficient_abatement_lateral_TE(type_line, abatement_lateral_list):
    """Used to get the lateral abatement coefficient of a TE based on it's type.
    The mandatory arguments are :
    - the type of the feature
    - list of the lateral abatement values for every line type.
    """
    # Get the coefficient from the excel file for this type of line.
    coefficient = abatement_lateral_list[type_line]
    return coefficient


def coefficient_abatement_longitudinal_TE(type_line, length, abatement_longitudinal_list):
    """Used to get the longitudinal abatement coefficient of a TE based on it's type and length.
    The mandatory arguments are :
    - the type of the feature
    - the length of the feature
    - list of the longitudinal abatement values for every line type.
    """
    # Get the abatement for a meter from the excel file for this type of line.
    abatement = abatement_longitudinal_list[type_line]
    # Create the coefficient by multiplying the abatement by the length and divide the product by 100.
    coefficient = (abatement * length) / 100
    # Assure the coefficient is not bigger than 1.
    if coefficient > 1:
        coefficient = 1
    return coefficient
